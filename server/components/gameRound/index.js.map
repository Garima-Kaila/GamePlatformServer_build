{"version":3,"sources":["../../../../server/components/gameRound/index.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;;;;;+CAEwB,0CAA0C;;IAAnE,mBAAmB;;sBACP,WAAW;;IAAvB,MAAM;;AAEX,SAAS,oBAAoB,CAAC,GAAG,EAAE,GAAG,EAAC,IAAI,EAAC;AAC/C,UAAM,CAAC,GAAG,CAAC,CAAC,EAAC,WAAW,EAAC,sBAAsB,CAAC,CAAC;AACjD,QAAG,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,EAAC;;;;;AAK9B,2BAAmB,CAAC,sBAAsB,CAAC,EAAC,MAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAC,IAAI,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAC,EAAC,UAAS,GAAG,EAAC,SAAS,EAAC;AAC1G,gBAAG,GAAG,EAAC,EAAE,MACJ,IAAG,SAAS,EAAC;;AAEd,mBAAG,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACxB,mBAAG,CAAC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC;AACzC,oBAAI,EAAE,CAAC;aACV,MAAI;AACD,oBAAI,EAAE,CAAC;aACV;SACJ,CAAC,CAAA;KACD,MAAI;AACD,YAAI,EAAE,CAAC;KACV;CAGJ;;AACM,SAAS,qBAAqB,CAAC,GAAG,EAAE,GAAG,EAAC,IAAI,EAAC;AAChD,UAAM,CAAC,GAAG,CAAC,CAAC,EAAC,WAAW,EAAC,uBAAuB,CAAC,CAAC;AAClD,QAAG,GAAG,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,EAAC;;AAEzB,YAAI,EAAE,CAAC;KACV,MAAI;AACA,YAAG,GAAG,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,EAAC;AAC1B,gBAAI,EAAE,CAAC;SACV,MAAI;AACN,+BAAmB,CAAC,MAAM,CAAC,EAAC,MAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM;AAC1C,mBAAG,EAAC,GAAG,CAAC,IAAI,CAAC,GAAG;AAChB,uBAAO,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO;AAC/B,wBAAQ,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ;AACjC,mBAAG,EAAC,GAAG,CAAC,IAAI,CAAC,GAAG;AAChB,oBAAI,EAAC,GAAG,CAAC,IAAI,CAAC,IAAI;AAClB,sBAAM,EAAC,GAAG,CAAC,IAAI,CAAC,MAAM;AACtB,uBAAO,EAAC,GAAG,CAAC,IAAI,CAAC,YAAY;AAC7B,sBAAM,EAAC,GAAG,CAAC,IAAI,CAAC,SAAS;aAC5B,EAAC,UAAS,GAAG,EAAC,SAAS,EAAC;AACjB,oBAAG,GAAG,EAAC,EAEN,MAAI;AACD,wBAAI,EAAE,CAAC;iBACV;aACR,CAAC,CAAC;SACN;KACJ;CACJ","file":"index.js","sourcesContent":["/**\n * Session manager\n */\n\n'use strict';\n\nimport * as gameRoundController from '../../api/gameRound/gameRound.controller' ;\nimport * as logger from '../logger';\n\nexport function managePreGameRequest(req, res,next){\n    logger.log(0,\"GameRound\",\"managePreGameRequest\");\n    if(req.Game.action === \"init\"){\n    // todo: \n    // check if there is any incomplete game round \n    // respond with the last game rounf and no need to proceed further\n    // bascially flag round as \"isRestore\" and skip different service calls accordingly\n    gameRoundController.getLastIncompleteRound({userId:req.Game.userId,game:req.Game.game},function(err,gameRound){\n        if(err){}\n        else if(gameRound){\n            // there is some incomplete game round\n            req.Game.restore = true;\n            req.Game.lastOutcome = gameRound.outcome;\n            next();\n        }else{\n            next();\n        }\n    })\n    }else{\n        next();\n    }\n    \n    \n}\nexport function managePostGameRequest(req, res,next){\n    logger.log(0,\"GameRound\",\"managePostGameRequest\");\n    if(req.Game.restore === true){\n        // no need to insert \"init\" of restoring game\n        next();\n    }else{\n         if(req.Game.action === \"init\"){\n             next();\n         }else{\n        gameRoundController.insert({userId:req.Game.userId,\n                bet:req.Game.bet,\n                balance:req.Game.wallet.balance,\n                currency:req.Game.wallet.currency,\n                win:req.Game.win,\n                game:req.Game.game,\n                action:req.Game.action,\n                outcome:req.Game.gameResponse,\n                isOver:req.Game.roundOver\n            },function(err,gameRound){\n                    if(err){\n\n                    }else{\n                        next();\n                    }\n            });\n        }\n    }\n}\n"]}