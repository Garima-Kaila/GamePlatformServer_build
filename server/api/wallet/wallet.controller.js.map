{"version":3,"sources":["../../../../server/api/wallet/wallet.controller.js"],"names":[],"mappings":"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","file":"wallet.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/wallets              ->  index\n * POST    /api/wallets              ->  create\n * GET     /api/wallets/:id          ->  show\n * PUT     /api/wallets/:id          ->  update\n * DELETE  /api/wallets/:id          ->  destroy\n */\n\n'use strict';\n\nimport _ from 'lodash';\nimport Wallet from './wallet.model';\nimport Transaction from './transaction.model'\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      res.status(statusCode).json(entity);\n    }\n  };\n}\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Wallet\nexport function index(req, res) {\n  Transaction.aggregateAsync([{ \n    $group: { \n            _id: \"$type\", \n            total: { $sum: \"$amount\" }\n        } \n    }])\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n/*\nfunction saveUpdates(updates) {\n  return function(entity) {\n    var updated = _.merge(entity, updates);\n    return updated.saveAsync()\n      .spread(updated => {\n        return updated;\n      });\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.removeAsync()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\n\n\n// Gets a single Wallet from the DB\nexport function show(req, res) {\n  Wallet.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Wallet in the DB\nexport function create(req, res) {\n  Wallet.createAsync(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Updates an existing Wallet in the DB\nexport function update(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  Wallet.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(saveUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Wallet from the DB\nexport function destroy(req, res) {\n  Wallet.findByIdAsync(req.params.id)\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n*/\nexport function getWalletOfUser(userId,callback) {\n    Wallet.findOne({userId:userId},callback);\n}\n\nexport function placeBet(obj,callback) {\n    Transaction.create({userId: obj.userId,amount: (-1*obj.bet), type:\"BET\"},function(err,transactionLooged){\n        update(obj.userId,(-1*obj.bet),callback);\n    });\n    \n}\nexport function addWin(obj,callback) {\n    Transaction.create({userId: obj.userId,amount: obj.win, type:\"WIN\"},function(err,transactionLooged){\n        update(obj.userId,obj.win,callback);\n    });\n    \n}\n\nexport function createIfNotExists(obj,callback) {\n    var initObj = {\n        userId:obj.userId,\n        balance:obj.balance,\n        locked:false,\n        currency:obj.currency\n    }\n    Wallet.findOneAndUpdate(\n        {userId:obj.userId}, \n        {$setOnInsert: initObj}, \n        {upsert: true,new:true}, \n        callback\n    );\n}\n\nfunction update(userId,amtToInc,callback) {\n   Wallet.findOneAndUpdate({userId:userId},\n                            {$inc:{balance:amtToInc}},\n                            {upsert: false,new:true}, \n                            callback);\n}"]}