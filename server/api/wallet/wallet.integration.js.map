{"version":3,"sources":["../../../../server/api/wallet/wallet.integration.js"],"names":[],"mappings":"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","file":"wallet.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newWallet;\n\ndescribe('Wallet API:', function() {\n\n  describe('GET /api/wallets', function() {\n    var wallets;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/wallets')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          wallets = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      expect(wallets).to.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/wallets', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/wallets')\n        .send({\n          name: 'New Wallet',\n          info: 'This is the brand new thing!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newWallet = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created thing', function() {\n      expect(newWallet.name).to.equal('New Wallet');\n      expect(newWallet.info).to.equal('This is the brand new thing!!!');\n    });\n\n  });\n\n  describe('GET /api/wallets/:id', function() {\n    var thing;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/wallets/' + newWallet._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          thing = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      thing = {};\n    });\n\n    it('should respond with the requested thing', function() {\n      expect(thing.name).to.equal('New Wallet');\n      expect(thing.info).to.equal('This is the brand new thing!!!');\n    });\n\n  });\n\n  describe('PUT /api/wallets/:id', function() {\n    var updatedWallet;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/wallets/' + newWallet._id)\n        .send({\n          name: 'Updated Wallet',\n          info: 'This is the updated thing!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedWallet = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedWallet = {};\n    });\n\n    it('should respond with the updated thing', function() {\n      expect(updatedWallet.name).to.equal('Updated Wallet');\n      expect(updatedWallet.info).to.equal('This is the updated thing!!!');\n    });\n\n  });\n\n  describe('DELETE /api/wallets/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/wallets/' + newWallet._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when thing does not exist', function(done) {\n      request(app)\n        .delete('/api/wallets/' + newWallet._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}