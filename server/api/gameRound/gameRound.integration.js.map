{"version":3,"sources":["../../../../server/api/gameRound/gameRound.integration.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;yBAGO,WAAW;;;;AAD/B,IAAI,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAG3B,IAAI,YAAY,CAAC;;AAEjB,QAAQ,CAAC,gBAAgB,EAAE,YAAW;;AAEpC,UAAQ,CAAC,qBAAqB,EAAE,YAAW;AACzC,QAAI,UAAU,CAAC;;AAEf,cAAU,CAAC,UAAS,IAAI,EAAE;AACxB,kCAAQ,GAAG,CAAC,CACT,GAAG,CAAC,iBAAiB,CAAC,CACtB,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAC9B,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACjB,YAAI,GAAG,EAAE;AACP,iBAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;AACD,kBAAU,GAAG,GAAG,CAAC,IAAI,CAAC;AACtB,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,gCAAgC,EAAE,YAAW;AAC9C,YAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KAC5C,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,sBAAsB,EAAE,YAAW;AAC1C,cAAU,CAAC,UAAS,IAAI,EAAE;AACxB,kCAAQ,GAAG,CAAC,CACT,IAAI,CAAC,iBAAiB,CAAC,CACvB,IAAI,CAAC;AACJ,YAAI,EAAE,eAAe;AACrB,YAAI,EAAE,gCAAgC;OACvC,CAAC,CACD,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAC9B,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACjB,YAAI,GAAG,EAAE;AACP,iBAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;AACD,oBAAY,GAAG,GAAG,CAAC,IAAI,CAAC;AACxB,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,6CAA6C,EAAE,YAAW;AAC3D,YAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AACpD,YAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;KACtE,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,yBAAyB,EAAE,YAAW;AAC7C,QAAI,KAAK,CAAC;;AAEV,cAAU,CAAC,UAAS,IAAI,EAAE;AACxB,kCAAQ,GAAG,CAAC,CACT,GAAG,CAAC,kBAAkB,GAAG,YAAY,CAAC,GAAG,CAAC,CAC1C,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAC9B,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACjB,YAAI,GAAG,EAAE;AACP,iBAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;AACD,aAAK,GAAG,GAAG,CAAC,IAAI,CAAC;AACjB,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,aAAS,CAAC,YAAW;AACnB,WAAK,GAAG,EAAE,CAAC;KACZ,CAAC,CAAC;;AAEH,MAAE,CAAC,yCAAyC,EAAE,YAAW;AACvD,YAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAC7C,YAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;KAC/D,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,yBAAyB,EAAE,YAAW;AAC7C,QAAI,gBAAgB,CAAC;;AAErB,cAAU,CAAC,UAAS,IAAI,EAAE;AACxB,kCAAQ,GAAG,CAAC,CACT,GAAG,CAAC,kBAAkB,GAAG,YAAY,CAAC,GAAG,CAAC,CAC1C,IAAI,CAAC;AACJ,YAAI,EAAE,mBAAmB;AACzB,YAAI,EAAE,8BAA8B;OACrC,CAAC,CACD,MAAM,CAAC,GAAG,CAAC,CACX,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAC9B,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE;AACtB,YAAI,GAAG,EAAE;AACP,iBAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;AACD,wBAAgB,GAAG,GAAG,CAAC,IAAI,CAAC;AAC5B,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,aAAS,CAAC,YAAW;AACnB,sBAAgB,GAAG,EAAE,CAAC;KACvB,CAAC,CAAC;;AAEH,MAAE,CAAC,uCAAuC,EAAE,YAAW;AACrD,YAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;AAC5D,YAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;KACxE,CAAC,CAAC;GAEJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,4BAA4B,EAAE,YAAW;;AAEhD,MAAE,CAAC,+CAA+C,EAAE,UAAS,IAAI,EAAE;AACjE,kCAAQ,GAAG,CAAC,UACH,CAAC,kBAAkB,GAAG,YAAY,CAAC,GAAG,CAAC,CAC7C,MAAM,CAAC,GAAG,CAAC,CACX,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACjB,YAAI,GAAG,EAAE;AACP,iBAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;AACD,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,MAAE,CAAC,mDAAmD,EAAE,UAAS,IAAI,EAAE;AACrE,kCAAQ,GAAG,CAAC,UACH,CAAC,kBAAkB,GAAG,YAAY,CAAC,GAAG,CAAC,CAC7C,MAAM,CAAC,GAAG,CAAC,CACX,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAK;AACjB,YAAI,GAAG,EAAE;AACP,iBAAO,IAAI,CAAC,GAAG,CAAC,CAAC;SAClB;AACD,YAAI,EAAE,CAAC;OACR,CAAC,CAAC;KACN,CAAC,CAAC;GAEJ,CAAC,CAAC;CAEJ,CAAC,CAAC","file":"gameRound.integration.js","sourcesContent":["'use strict';\n\nvar app = require('../..');\nimport request from 'supertest';\n\nvar newGameRound;\n\ndescribe('GameRound API:', function() {\n\n  describe('GET /api/gameRounds', function() {\n    var gameRounds;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/gameRounds')\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          gameRounds = res.body;\n          done();\n        });\n    });\n\n    it('should respond with JSON array', function() {\n      expect(gameRounds).to.be.instanceOf(Array);\n    });\n\n  });\n\n  describe('POST /api/gameRounds', function() {\n    beforeEach(function(done) {\n      request(app)\n        .post('/api/gameRounds')\n        .send({\n          name: 'New GameRound',\n          info: 'This is the brand new thing!!!'\n        })\n        .expect(201)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          newGameRound = res.body;\n          done();\n        });\n    });\n\n    it('should respond with the newly created thing', function() {\n      expect(newGameRound.name).to.equal('New GameRound');\n      expect(newGameRound.info).to.equal('This is the brand new thing!!!');\n    });\n\n  });\n\n  describe('GET /api/gameRounds/:id', function() {\n    var thing;\n\n    beforeEach(function(done) {\n      request(app)\n        .get('/api/gameRounds/' + newGameRound._id)\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          thing = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      thing = {};\n    });\n\n    it('should respond with the requested thing', function() {\n      expect(thing.name).to.equal('New GameRound');\n      expect(thing.info).to.equal('This is the brand new thing!!!');\n    });\n\n  });\n\n  describe('PUT /api/gameRounds/:id', function() {\n    var updatedGameRound;\n\n    beforeEach(function(done) {\n      request(app)\n        .put('/api/gameRounds/' + newGameRound._id)\n        .send({\n          name: 'Updated GameRound',\n          info: 'This is the updated thing!!!'\n        })\n        .expect(200)\n        .expect('Content-Type', /json/)\n        .end(function(err, res) {\n          if (err) {\n            return done(err);\n          }\n          updatedGameRound = res.body;\n          done();\n        });\n    });\n\n    afterEach(function() {\n      updatedGameRound = {};\n    });\n\n    it('should respond with the updated thing', function() {\n      expect(updatedGameRound.name).to.equal('Updated GameRound');\n      expect(updatedGameRound.info).to.equal('This is the updated thing!!!');\n    });\n\n  });\n\n  describe('DELETE /api/gameRounds/:id', function() {\n\n    it('should respond with 204 on successful removal', function(done) {\n      request(app)\n        .delete('/api/gameRounds/' + newGameRound._id)\n        .expect(204)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n    it('should respond with 404 when thing does not exist', function(done) {\n      request(app)\n        .delete('/api/gameRounds/' + newGameRound._id)\n        .expect(404)\n        .end((err, res) => {\n          if (err) {\n            return done(err);\n          }\n          done();\n        });\n    });\n\n  });\n\n});\n"]}